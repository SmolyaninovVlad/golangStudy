package cases

import (
	"fmt"
)

var (
	x int
	z int
)

// InitCase5 Повышаем градус сложности
func InitCase5() {
	fmt.Println("Введите число x:")
	fmt.Scan(&x)
	fmt.Println("Введите число z:")
	fmt.Scan(&z)

	fmt.Println("Вы ввели число x:", x, "и число z:", z)
	x += z
	z = x - z
	x = x - z
	fmt.Println("Числа после преобразования:")
	fmt.Println("x:", x)
	fmt.Println("z:", z)

	fmt.Println("\nКомментарий:\n",
		"Данный способ не будет работать в случаях, когда сумма двух чисел будет больше чем вмещает в себе тип значения, в данном случае - int,",
		"так же данный способ не будет работать, если значения x и z будут не числовыми значениями а произвольными: \n",
		"	- строка;\n",
		"	- структура;\n",
		"	- какой либо объект и т.д.;")
	fmt.Println("Преимущество данного способа перед предыдущим на мой взгляд это:\n",
		"	- чистота кода (нет смысла объявлять лишнюю переменную если она больше нигде не используется и этого можно избежать);\n",
		"	- насчёт быстродействия не уверен;\n",
		"	- экономия места (объевление новой переменной которая забивает память) - неуверен насколько актуально;\n",
		"	- поддержка строгой типизации( на выходе у тебя всегда будет число, в противном случае обработать и выдать ошибку, хотя как я понимаю в контексте Golang-а это не имеет значения ).")

}
